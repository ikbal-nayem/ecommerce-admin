// partials
@import '../../partials/variables';
@import '../../partials/mixins';
@import '../../partials/classes';

// radio buttons & checkbox

.form-check-input {
	width: $form-check-input-width;
	height: $form-check-input-width;
	margin-top: ($line-height-base - $form-check-input-width) * 0.5; // line-height minus check height
	vertical-align: top;
	background-color: $form-check-input-bg;
	background-repeat: no-repeat;
	background-position: center;
	background-size: contain;
	border: $form-check-input-border;
	border: $form-check-input-border;
	appearance: none;
	@include transition($form-check-transition);

	&[type='checkbox'] {
		width: 18px;
		height: 18px;
		margin-top: ($line-height-base - $form-check-input-width - 0.1) * 0.5; // line-height minus check height
		@include border-radius($form-check-input-border-radius);
	}

	&[type='radio'] {
		width: 20px;
		height: 20px;
		margin-top: ($line-height-base - $form-check-input-width - 0.2) * 0.5; // line-height minus check height
		// stylelint-disable-next-line property-disallowed-list
		border-radius: $form-check-radio-border-radius;
	}

	&:active {
		filter: $form-check-input-active-filter;
	}

	&:focus {
		border-color: $primary__500;
		outline: 0;
		box-shadow: $form-check-input-focus-box-shadow;
	}

	&:checked {
		background-color: $form-check-input-checked-bg-color;
		border-color: $form-check-input-checked-border-color;
		border-color: $primary__500;

		&[type='checkbox'] {
			background-color: $primary__500;
			@if $enable-gradients {
				// background-image: escape-svg($form-check-input-checked-bg-image),
				// var(--#{$variable-prefix}gradient);
			} @else {
				// background-image: escape-svg($form-check-input-checked-bg-image);
			}
		}

		&[type='radio'] {
			background-color: white;
			@if $enable-gradients {
				background-image: escape-svg($form-check-radio-checked-bg-image), var(--#{$variable-prefix}gradient);
			} @else {
				background-image: escape-svg($form-check-radio-checked-bg-image);
			}
		}
	}

	&[type='checkbox']:indeterminate {
		background-color: $form-check-input-indeterminate-bg-color;
		border-color: $form-check-input-indeterminate-border-color;

		@if $enable-gradients {
			background-image: escape-svg($form-check-input-indeterminate-bg-image),
				var(--#{$variable-prefix}gradient);
		} @else {
			background-image: escape-svg($form-check-input-indeterminate-bg-image);
		}
	}

	&:disabled {
		pointer-events: none;
		filter: none;
		opacity: $form-check-input-disabled-opacity;
	}

	// Use disabled attribute in addition of :disabled pseudo-class
	// See: https://github.com/twbs/bootstrap/issues/28247
	&[disabled],
	&:disabled {
		~ .form-check-label {
			opacity: $form-check-label-disabled-opacity;
		}
	}
}

// switch buttons
.form-switch {
	.form-check-input {
		width: 2.083125em;
		// height: 18px;
		height: 16.67px;
		border: none;
		background-color: $neutral__600;
		margin-top: ($line-height-base - $form-check-input-width) * 0.5; // line-height minus check height
		position: relative;
		display: block;
		cursor: pointer;
		border-radius: 2.083125em;
		&::after {
			// content: "Hidden";
			content: attr(unchecked-value);
			position: absolute;
			// right: -62.33px;
			// right: -(43.33px+10px);
			left: 33.33px+10px;
			top: -1.3px;
			color: $neutral__700;
			@extend .wx__text_subtitle;
			@extend .wx__text_regular;
		}
		&:checked {
			background-color: $green__500 !important;
			position: relative;
			&::after {
				// content: "Visible" !important;
				content: attr(checked-value);
				position: absolute !important;
				// left: 41.33px;
				left: 33.33px+10px;
				top: -1.3px;
				color: $neutral__700 !important;
				@extend .wx__text_subtitle;
				@extend .wx__text_regular;
			}
		}
	}
}

.test-check {
	&::after {
		content: 'Hidden';
		position: absolute;
		color: $neutral__700;
		@extend .wx__text_subtitle;
		@extend .wx__text_regular;
	}
}

// custom class created for radio button label
.wx__radio_btn_label {
	margin-left: 6px !important;
}

.wx__subtitle_form {
	font-size: $form_subtitle_size;
	font-weight: 600;
}
